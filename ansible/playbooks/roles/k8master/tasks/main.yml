---
# tasks file for control

- name : install prereq 
  apt : name={{item}} state=present update_cache=yes
  with_items:
     - curl
     - python-httplib2

- name : check kubu already inited
  stat: path=/etc/kubernetes/admin.conf
  register: kinitStat

- name : kubunetes init
  command: kubeadm init  --apiserver-advertise-address 192.168.5.11
  when: kinitStat.stat.exists == False
  register: k8init_result

- debug:
        var: k8init_result.stdout_lines
       
- name: save k8init reuslt
  local_action: copy content="{{k8init_result}}" dest=/vagrant/k8initResult.log
  when: kinitStat.stat.exists == False

- name : create .kube dir
  file: path={{ansible_env.HOME}}/.kube state=directory

- name : check kubu config file exsit
  stat: path={{ansible_env.HOME}}/.kube/config
  register: kubeConfig 

- name : copy config
  command: cp /etc/kubernetes/admin.conf $HOME/.kube/config
  when: kubeConfig.stat.exists == False

- name : chown config file
  shell : "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: check if k8 pod created
  shell: "kubectl get pods --all-namespaces"
  become: true
  become_user: root
  register: pods_out

- debug:
        var: pods_out.stdout_lines


- name : create k8 pod
  command : kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  when: '"kube-system" not in pods_out.stdout'
  register: k8podCreate

- debug:
        var: k8podCreate.stdout_lines


- name: setup user kubernets env
  shell: "mkdir -p /home/ubuntu/.kube && cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config && chown -R ubuntu:ubuntu /home/ubuntu/.kube"

